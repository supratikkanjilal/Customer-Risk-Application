<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="DELETE">
        <category>custom</category>
        <client_script><![CDATA[function ($scope, $http, spUtil, $location, spAriaFocusManager) {
	$scope.$on('data_table.click', function(e, parms){
		var p = $scope.data.page_id; //No defaulting to 'form' page 
		if(p) {
			var s = {id: p, table: parms.table,number:parms.number , sys_id: parms.sys_id, view: 'sp'};
			$location.search(s);
		}
		var oid = $location.search().id;
		var p = $scope.data.page_id || 'form';
		var s = {id: p, table: parms.table, number:parms.number ,sys_id: parms.sys_id, view: $scope.data.view};
		if (oid == p) {
			s.spa = 1;
			var t = $location.search();
			s = angular.extend(t, s);
			$rootScope.$broadcast('$sp.list.click', s);
		}

		var newURL = $location.search(s);
		spAriaFocusManager.navigateToLink(newURL.url());	
	});
}
]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance_table</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>title,table,filter,maximum_entries,order_direction,glyph,field_list,color,order_by,sp_page,sp_widget.script,sp_widget.client_script,sp_widget.template,sp_widget.css</field_list>
        <has_preview>true</has_preview>
        <id>clone_data_table</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Clone Data Table</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function(){
	/*  "use strict"; - linter issues */
	// populate the 'data' object
	var sp_page = $sp.getValue('sp_page');
	var pageGR = new GlideRecord('sp_page');
	pageGR.get(sp_page);
	data.page_id = pageGR.id.getDisplayValue();
	$sp.getValues(data);
	if (data.field_list) {
		data.fields_array = data.field_list.split(',');	
	} else {
		data.field_list = $sp.getListColumns(data.table);
	}

	if (input) {
		data.p = input.p;
		data.o = input.o;
		data.d = input.d;
		data.q = input.q;
	}
	data.p = data.p || 1;
	data.o = data.o || $sp.getValue('order_by');
	data.d = data.d || $sp.getValue('order_direction');

	data.page_index = (data.p - 1);
	data.window_size = $sp.getValue('maximum_entries') || 10;
	data.window_start  = (data.page_index * data.window_size);
	data.window_end = (((data.page_index + 1) * data.window_size));
	data.filter = $sp.getValue("filter");
	var filterField = options.filter_field || 'itfm_sb_stmt_def';
	if(filterField) {
		var value = $sp.getParameter(filterField);
		
		if(value) {
			var query = filterField + '=' + value;
			if(data.filter)
				data.filter = data.filter + '^' + query;
			else 
				data.filter = query;
		}
	}
	gs.info('data.filter = ' + data.filter);
	
	var gr = new GlideRecordSecure(data.table);
	if (!gr.isValid()) {
		data.invalid_table = true;
		data.table_label = data.table;
		return;
	}
	data.table_label = gr.getLabel();
	
	var widgetParams = {
		table: data.table, 
		fields: data.field_list,
		o: data.o,
		d: data.d,
		filter: data.filter,
		window_size: data.window_size,
		view: 'sp',
		title: options.title,
		show_breadcrumbs: true,
		headerTitle: options.title,
		useInstanceTitle: true
	};

	gs.info('widgetParams = ' + JSON.stringify(widgetParams));
	data.dataTableWidget = $sp.getWidget('widget-data-table', widgetParams);
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>brijesh.banerjee</sys_created_by>
        <sys_created_on>2025-09-04 06:12:26</sys_created_on>
        <sys_id>23ce58d98733ae50b3fb021a0cbb35aa</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Clone Data Table</sys_name>
        <sys_package display_value="Spoke" source="x_cpszo_spoke">8a196a9187c7e61002fdeac73cbb35b9</sys_package>
        <sys_policy/>
        <sys_scope display_value="Spoke">8a196a9187c7e61002fdeac73cbb35b9</sys_scope>
        <sys_update_name>sp_widget_23ce58d98733ae50b3fb021a0cbb35aa</sys_update_name>
        <sys_updated_by>brijesh.banerjee</sys_updated_by>
        <sys_updated_on>2025-09-04 06:47:48</sys_updated_on>
        <template><![CDATA[<div>
  <div class="alert alert-danger" ng-if="data.invalid_table">
    ${Table not defined} '{{data.table_label}}'
  </div>
  <sp-widget ng-if="data.dataTableWidget" widget="data.dataTableWidget"></sp-widget>
</div>]]></template>
    </sp_widget>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Spoke">8a196a9187c7e61002fdeac73cbb35b9</application>
        <file_path/>
        <instance_id>2baf7f71db9a0d1007072f17d496195c</instance_id>
        <instance_name>capgeminipolskaspzoodemo11</instance_name>
        <name>sp_widget_23ce58d98733ae50b3fb021a0cbb35aa</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function ($scope, $http, spUtil, $location, spAriaFocusManager) {
	$scope.$on('data_table.click', function(e, parms){
		var p = $scope.data.page_id; //No defaulting to 'form' page 
		if(p) {
			var s = {id: p, table: parms.table,number:parms.number , sys_id: parms.sys_id, view: 'sp'};
			$location.search(s);
		}
		var oid = $location.search().id;
		var p = $scope.data.page_id || 'form';
		var s = {id: p, table: parms.table, number:parms.number ,sys_id: parms.sys_id, view: $scope.data.view};
		if (oid == p) {
			s.spa = 1;
			var t = $location.search();
			s = angular.extend(t, s);
			$rootScope.$broadcast('$sp.list.click', s);
		}

		var newURL = $location.search(s);
		spAriaFocusManager.navigateToLink(newURL.url());	
	});
}
]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css/&gt;&lt;data_table&gt;sp_instance_table&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list&gt;title,table,filter,maximum_entries,order_direction,glyph,field_list,color,order_by,sp_page,sp_widget.script,sp_widget.client_script,sp_widget.template,sp_widget.css&lt;/field_list&gt;&lt;has_preview&gt;true&lt;/has_preview&gt;&lt;id&gt;clone_data_table&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {  }]]&gt;&lt;/link&gt;&lt;name&gt;Clone Data Table&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function(){
	/*  "use strict"; - linter issues */
	// populate the 'data' object
	var sp_page = $sp.getValue('sp_page');
	var pageGR = new GlideRecord('sp_page');
	pageGR.get(sp_page);
	data.page_id = pageGR.id.getDisplayValue();
	$sp.getValues(data);
	if (data.field_list) {
		data.fields_array = data.field_list.split(',');	
	} else {
		data.field_list = $sp.getListColumns(data.table);
	}

	if (input) {
		data.p = input.p;
		data.o = input.o;
		data.d = input.d;
		data.q = input.q;
	}
	data.p = data.p || 1;
	data.o = data.o || $sp.getValue('order_by');
	data.d = data.d || $sp.getValue('order_direction');

	data.page_index = (data.p - 1);
	data.window_size = $sp.getValue('maximum_entries') || 10;
	data.window_start  = (data.page_index * data.window_size);
	data.window_end = (((data.page_index + 1) * data.window_size));
	data.filter = $sp.getValue("filter");
	var filterField = options.filter_field || 'itfm_sb_stmt_def';
	if(filterField) {
		var value = $sp.getParameter(filterField);
		
		if(value) {
			var query = filterField + '=' + value;
			if(data.filter)
				data.filter = data.filter + '^' + query;
			else 
				data.filter = query;
		}
	}
	gs.info('data.filter = ' + data.filter);
	
	var gr = new GlideRecordSecure(data.table);
	if (!gr.isValid()) {
		data.invalid_table = true;
		data.table_label = data.table;
		return;
	}
	data.table_label = gr.getLabel();
	
	var widgetParams = {
		table: data.table, 
		fields: data.field_list,
		o: data.o,
		d: data.d,
		filter: data.filter,
		window_size: data.window_size,
		view: 'sp',
		title: options.title,
		show_breadcrumbs: true,
		headerTitle: options.title,
		useInstanceTitle: true
	};

	gs.info('widgetParams = ' + JSON.stringify(widgetParams));
	data.dataTableWidget = $sp.getWidget('widget-data-table', widgetParams);
})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;brijesh.banerjee&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2025-09-04 06:12:26&lt;/sys_created_on&gt;&lt;sys_id&gt;23ce58d98733ae50b3fb021a0cbb35aa&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;Clone Data Table&lt;/sys_name&gt;&lt;sys_package display_value="Spoke" source="x_cpszo_spoke"&gt;8a196a9187c7e61002fdeac73cbb35b9&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Spoke"&gt;8a196a9187c7e61002fdeac73cbb35b9&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_23ce58d98733ae50b3fb021a0cbb35aa&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;brijesh.banerjee&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2025-09-04 06:47:48&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div&gt;
  &lt;div class="alert alert-danger" ng-if="data.invalid_table"&gt;
    ${Table not defined} '{{data.table_label}}'
  &lt;/div&gt;
  &lt;sp-widget ng-if="data.dataTableWidget" widget="data.dataTableWidget"&gt;&lt;/sp-widget&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
        <payload_hash>-184464395</payload_hash>
        <record_name>Clone Data Table</record_name>
        <reverted_from/>
        <source>9a0c392b878ba650b3fb021a0cbb3575</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>brijesh.banerjee</sys_created_by>
        <sys_created_on>2025-09-04 06:47:48</sys_created_on>
        <sys_id>a1e66c1d8773ae50b3fb021a0cbb35f5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>199137b3f820000001</sys_recorded_at>
        <sys_updated_by>brijesh.banerjee</sys_updated_by>
        <sys_updated_on>2025-09-04 06:47:48</sys_updated_on>
        <type>Widget</type>
        <update_guid>65e66c1db673ae50e161dd45a125c5f4</update_guid>
        <update_guid_history>65e66c1db673ae50e161dd45a125c5f4:-184464395,a3ce58d90133ae508ab24718cd32aeac:1998402079</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="Clone Data Table">54746cea87332a90b3fb021a0cbb358c</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>brijesh.banerjee</sys_created_by>
        <sys_created_on>2025-09-08 03:49:29</sys_created_on>
        <sys_db_object display_value="" name="sp_widget">sp_widget</sys_db_object>
        <sys_id>319dcfaa81a34414b01231b892c225a4</sys_id>
        <sys_metadata>23ce58d98733ae50b3fb021a0cbb35aa</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Clone Data Table</sys_name>
        <sys_package display_value="Spoke" source="x_cpszo_spoke">8a196a9187c7e61002fdeac73cbb35b9</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="Spoke">8a196a9187c7e61002fdeac73cbb35b9</sys_scope>
        <sys_scope_delete display_value="">244a12c00e714612af9745888ca7e024</sys_scope_delete>
        <sys_update_name>sp_widget_23ce58d98733ae50b3fb021a0cbb35aa</sys_update_name>
        <sys_update_version display_value="sp_widget_23ce58d98733ae50b3fb021a0cbb35aa">a1e66c1d8773ae50b3fb021a0cbb35f5</sys_update_version>
        <sys_updated_by>brijesh.banerjee</sys_updated_by>
        <sys_updated_on>2025-09-08 03:49:29</sys_updated_on>
    </sys_metadata_delete>
</record_update>
