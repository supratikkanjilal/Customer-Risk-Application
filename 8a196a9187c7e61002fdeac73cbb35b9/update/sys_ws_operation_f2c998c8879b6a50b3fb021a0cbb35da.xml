<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>Get CRM Data</name>
        <operation_script><![CDATA[(function process(request, response) {
    var customerId = request.pathParams.customer_id;

    var gr = new GlideRecord('x_cpszo_spoke_offer_tracker');
    if (gr.get('number', customerId)) {
        var resp = {
            customer_id: customerId,
            income: (gr.u_income || Math.floor(Math.random() * 100000)).toString(),
            eligible: gr.u_offer_type ? true : (Math.random() > 0.5)
        };

        var il = new GlideRecord('x_cpszo_spoke_integration_log');
        il.initialize();
        il.u_timestamp = new GlideDateTime();
        il.u_interface = 'Mock CRM GET';
        il.u_payload = JSON.stringify({ customer_id: customerId });
        il.u_status = 'OK';
        il.u_response = JSON.stringify(resp);
        il.insert();

        response.setStatus(200);
        response.setBody(resp);
    } else {
        var resp2 = {
            customer_id: customerId,
            income: (20000 + Math.floor(Math.random() * 80000)).toString(),
            eligible: Math.random() > 0.3
        };

        var il2 = new GlideRecord('x_cpszo_spoke_integration_log');
        il2.initialize();
        il2.u_timestamp = new GlideDateTime();
        il2.u_interface = 'Mock CRM GET';
        il2.u_payload = JSON.stringify({ customer_id: customerId });
        il2.u_status = 'Simulated';
        il2.u_response = JSON.stringify(resp2);
        il2.insert();

        response.setStatus(200);
        response.setBody(resp2);
    }
})(request, response);




// (function process(request, response) {
//     var customerId = request.pathParams.customer_id;

//     var gr = new GlideRecord('x_cpszo_spoke_offer_tracker');
//     if (gr.get('number', customerId)) {
//         var resp = {
//             customer_id: customerId,
//             income: Math.floor(Math.random() * 100000).toString(), // Simulated income
//             eligible: gr.getValue('offer_type') ? true : (Math.random() > 0.5),
//             offer_type: gr.getValue('offer_type'),
//             delinquency_status: gr.getValue('delinquency_status'),
//             installment_amount: gr.getValue('installment_amount')
//         };

//         var il = new GlideRecord('x_cpszo_spoke_integration_log');
//         il.initialize();
//         il.u_timestamp = new GlideDateTime();
//         il.u_interface = 'Mock CRM GET';
//         il.u_payload = JSON.stringify({ customer_id: customerId });
//         il.u_status = 'OK';
//         il.u_response = JSON.stringify(resp);
//         il.insert();

//         response.setStatus(200);
//         response.setBody(resp);
//     } else {
//         var resp2 = {
//             customer_id: customerId,
//             income: (20000 + Math.floor(Math.random() * 80000)).toString(),
//             eligible: Math.random() > 0.3,
//             offer_type: 'None',
//             delinquency_status: 'Unknown',
//             installment_amount: '0.00'
//         };

//         var il2 = new GlideRecord('x_cpszo_spoke_integration_log');
//         il2.initialize();
//         il2.u_timestamp = new GlideDateTime();
//         il2.u_interface = 'Mock CRM GET';
//         il2.u_payload = JSON.stringify({ customer_id: customerId });
//         il2.u_status = 'Simulated';
//         il2.u_response = JSON.stringify(resp2);
//         il2.insert();

//         response.setStatus(200);
//         response.setBody(resp2);
//     }
// })(request, response);

]]></operation_script>
        <operation_uri>/api/x_cpszo_spoke/simulatecrmeligibility/mock_crm/{customer_id}</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/mock_crm/{customer_id}</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>brijesh.banerjee</sys_created_by>
        <sys_created_on>2025-08-06 12:08:14</sys_created_on>
        <sys_id>f2c998c8879b6a50b3fb021a0cbb35da</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>Get CRM Data</sys_name>
        <sys_package display_value="Spoke" source="x_cpszo_spoke">8a196a9187c7e61002fdeac73cbb35b9</sys_package>
        <sys_policy/>
        <sys_scope display_value="Spoke">8a196a9187c7e61002fdeac73cbb35b9</sys_scope>
        <sys_update_name>sys_ws_operation_f2c998c8879b6a50b3fb021a0cbb35da</sys_update_name>
        <sys_updated_by>brijesh.banerjee</sys_updated_by>
        <sys_updated_on>2025-08-06 12:22:45</sys_updated_on>
        <web_service_definition display_value="SimulateCRMEligibility">7b8990c8879b6a50b3fb021a0cbb3557</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
